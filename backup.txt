
# GARCH(1,1) model

garch_d = estimate_garch(lret_d)
garch_h = estimate_garch(lret_h)
garch_5m = estimate_garch(lret_5m)

garch_lkd_d = lret_d.index[-1]
garch_lkd_h = lret_h.index[-1]
garch_lkd_5m = lret_5m.index[-1]

forecast_garch_d = forecast_garch(garch_d, horizon=step_ahead, last_known_date=garch_lkd_d, freq='D')
forecast_garch_h = forecast_garch(garch_h, horizon=step_ahead * 24, last_known_date=garch_lkd_h, freq='h')
forecast_garch_5m = forecast_garch(garch_5m, horizon=step_ahead * 288, last_known_date=garch_lkd_5m, freq='5min')

# The 5 mins is nor appropriate neither informative but we keep it for symmetry


# HAR-RV model

har_d = estimate_har(har_d_data)
har_h = estimate_har(har_h_data)
har_5m = estimate_har(har_5m_data)

latest_lags_d = har_d_data.iloc[-1][['daily_lag', 'weekly_lag', 'monthly_lag']]
latest_lags_h = har_h_data.iloc[-1][['daily_lag', 'weekly_lag', 'monthly_lag']]
latest_lags_5m = har_5m_data.iloc[-1][['daily_lag', 'weekly_lag', 'monthly_lag']]

har_lkd_d = har_d_data.index[-1]
har_lkd_h = har_h_data.index[-1]
har_lkd_5m = har_5m_data.index[-1]

forecast_har_d = forecast_har_iterative(har_d, latest_lags_d, horizon=step_ahead, last_known_date=har_lkd_d, freq='D')
forecast_har_h = forecast_har_iterative(har_h, latest_lags_h, horizon=step_ahead * 24, last_known_date=har_lkd_h, freq='h')
forecast_har_5m = forecast_har_iterative(har_5m, latest_lags_5m, horizon=step_ahead * 288, last_known_date=har_lkd_5m, freq='5min')


# RFSV model

scales = [1, 2, 5, 10, 20, 50, 100, 200]

h_est_d, r_squared_d = estimate_h_loglog(lrv_d, scales, q=1)
h_est_h, r_squared_h = estimate_h_loglog(lrv_h, scales, q=1)
h_est_5m, r_squared_5m = estimate_h_loglog(lrv_5m, scales, q=1)

nu_est_d = lrv_d.std()
nu_est_h = lrv_h.std()
nu_est_5m = lrv_5m.std()

print("1 day:",h_est_d, r_squared_d, nu_est_d)
print("1 hour:", h_est_h, r_squared_h, nu_est_h)
print("5 minutes", h_est_5m, r_squared_5m, nu_est_5m)

forecast_rfsv_d = forecast_RFSV(lrv_d, h_est_d, nu_est_d, horizon=step_ahead, truncation_window=252,n_sims=5)
forecast_rfsv_h = forecast_RFSV(lrv_h, h_est_h, nu_est_h, horizon=step_ahead * 24, truncation_window=252, n_sims=5)
forecast_rfsv_5m = forecast_RFSV(lrv_5m, h_est_5m, nu_est_5m, horizon=step_ahead * 288, truncation_window=252, n_sims=5)


-----------------------------------------------------------------------------------------------------------------------------------------------------


#-------------------------------------------------------------------------------------------------------------------------#

# GARCH(1,1) model

garch_d = estimate_garch(lret_d)
garch_h = estimate_garch(lret_h)
garch_5m = estimate_garch(lret_5m)

garch_lkd_d = lret_d.index[-1]
garch_lkd_h = lret_h.index[-1]
garch_lkd_5m = lret_5m.index[-1]

forecast_garch_d = forecast_garch(garch_d, horizon=step_ahead, last_known_date=garch_lkd_d, freq='D')
forecast_garch_h = forecast_garch(garch_h, horizon=step_ahead * 24, last_known_date=garch_lkd_h, freq='h')
forecast_garch_5m = forecast_garch(garch_5m, horizon=step_ahead * 288, last_known_date=garch_lkd_5m, freq='5min')

# The 5 mins is nor appropriate neither informative but we keep it for symmetry


# HAR-RV model

har_d = estimate_har(har_d_data)
har_h = estimate_har(har_h_data)
har_5m = estimate_har(har_5m_data)

latest_lags_d = har_d_data.iloc[-1][['daily_lag', 'weekly_lag', 'monthly_lag']]
latest_lags_h = har_h_data.iloc[-1][['daily_lag', 'weekly_lag', 'monthly_lag']]
latest_lags_5m = har_5m_data.iloc[-1][['daily_lag', 'weekly_lag', 'monthly_lag']]

har_lkd_d = har_d_data.index[-1]
har_lkd_h = har_h_data.index[-1]
har_lkd_5m = har_5m_data.index[-1]

forecast_har_d = forecast_har_iterative(har_d, latest_lags_d, horizon=step_ahead, last_known_date=har_lkd_d, freq='D')
forecast_har_h = forecast_har_iterative(har_h, latest_lags_h, horizon=step_ahead * 24, last_known_date=har_lkd_h, freq='h')
forecast_har_5m = forecast_har_iterative(har_5m, latest_lags_5m, horizon=step_ahead * 288, last_known_date=har_lkd_5m, freq='5min')


# RFSV model

scales = [1, 2, 5, 10, 20, 50, 100, 200]

h_est_d, r_squared_d = estimate_h_loglog(lrv_d, scales, q=1)
h_est_h, r_squared_h = estimate_h_loglog(lrv_h, scales, q=1)
h_est_5m, r_squared_5m = estimate_h_loglog(lrv_5m, scales, q=1)

nu_est_d = lrv_d.std()
nu_est_h = lrv_h.std()
nu_est_5m = lrv_5m.std()

print("1 day:",h_est_d, r_squared_d, nu_est_d)
print("1 hour:", h_est_h, r_squared_h, nu_est_h)
print("5 minutes", h_est_5m, r_squared_5m, nu_est_5m)

forecast_rfsv_d = forecast_RFSV(lrv_d, h_est_d, nu_est_d, horizon=step_ahead, truncation_window=252,n_sims=5)
forecast_rfsv_h = forecast_RFSV(lrv_h, h_est_h, nu_est_h, horizon=step_ahead * 24, truncation_window=252, n_sims=5)
forecast_rfsv_5m = forecast_RFSV(lrv_5m, h_est_5m, nu_est_5m, horizon=step_ahead * 288, truncation_window=252, n_sims=5)




